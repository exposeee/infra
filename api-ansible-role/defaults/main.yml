---
# The name of the application, uses to create application directory, e.g.
# should be a shorthand, lowercase and not contain any whitespaces.
app_name: exposeee-api

# Port for the application
app_port: 8000

# The user used to run the Flask application
app_user: www-data

# The directory to keep application source code.
app_directory: "/opt/{{ app_name }}"

# The directory to keep application logs.
app_log_directory: "/var/log/{{ app_name }}"

app_env: ".{{ app_name }}_env"

# The path to application requirements.
app_requirements: "{{ app_directory }}/requirements.txt"

# The remote git repository to pull application code from, for example:
# git@github.com:hypebeast/flaskapp.git
app_repository: git@github.com:exposeee/exposeee-api.git

# The version of the repository to checkout. This can be a full
# 40-character SHA1 hash, the branch or a tag name.
app_version: master

# The list of environment variables uses to run most of commands.
app_environment:
  PATH: "{{ app_directory }}/bin:{{ ansible_env.PATH }}"


app_wsgi_module: exposeee_api.wsgi

# The list of custom commands to run before and after deploy. These commands
# uses previously defined environment to run.
app_pre_hooks: []
app_post_hooks: []

# The path to application config to use when launch application.
app_config:

# The Python version which should be installed
python_version: 3.8

# The list of system packages required to build/run application.
app_packages:
  - git
  - gunicorn
  - python{{ python_version }}
  - python3-setuptools
  - python3-pip
  - python3-venv
  - python3-virtualenv
  - build-essential
  - libssl-dev
  - libffi-dev
  - python-dev
  - curl
  - autoconf
  - automake
  - libtool
  - pkg-config
  - coreutils
  - libsnappy-dev
  - poppler-utils
  - tesseract-ocr
  - tesseract-ocr-deu
